"""
    В Этом файле храняться тексты документации, description для эндпоинтов

    Авторизация
"""

tg_authorization = """
Этот эндпоинт обрабатывает авторизацию пользователей через Telegram. 
Он получает информацию о пользователе из Telegram, обновляет или создает запись пользователя в базе данных, 
управляет токенами доступа.
**Запрос:**
Отправьте POST-запрос на этот эндпоинт с JSON-данными в теле запроса:
```json
{
  "id": 123456789,  # Telegram ID пользователя
  "first_name": "Иван",  # Имя пользователя
  "last_name": "Иванов",  # Фамилия пользователя
  "username": "ivan_ivanov"  # Username пользователя в Telegram
}
```
Curl
```
curl -v -X POST "http://localhost:8000/users/tg_authorization" -H "Content-Type: application/json" -d '{                                                                                                                    
 "id": 123456789,
 "first_name": "Иван",
 "last_name": "Иванов",
 "username": "ivan_ivanov"
'
```
**Ответ:**
 В случае успешной авторизации вы получите JSON-ответ с токеном доступа, установленным в куке:
```json
{
  "message": "Авторизация прошла успешно, токен доступа установлен в куке."
}
```
**Статусные коды:**
```
- **200 OK:** Авторизация прошла успешно, токен доступа установлен в куке.
- **400:** Неверный формат запроса.
```
**Примечания:**
```
- `Если пользователь уже существует в базе данных, его информация будет обновлена предоставленными данными.
- `Если пользователь новый, будет создана новая запись пользователя.
- `Токены доступа действительны в течение 24 часов, при бездействии она будет удалено.
```
"""
email_sms = """
Данный эндпоинт предназначен для отправки кода подтверждения на электронную почту пользователя.
**Запрос:**
Отправьте POST-запрос на этот эндпоинт с JSON-данными в теле запроса:
```json
{
  "email": "test@example.com"  # Электронная почта пользователя
}
```
Curl
```
curl -i -X POST "http://127.0.0.1:8000/email/sms"      -H "Content-Type: application/json"      -d '{
    "email": "test@example.com"
}'
```
**Ответ:**
При успешном выполнении запроса возвращается сообщение о том, что код подтверждения отправлен.
**Статусные коды:**
```
- **200 OK:** Код подтверждения отправлен успешно.
- **401:** Электронная почта не валидна.
- **500:** Ошибка на сервере.
"""

email_reg = """
Данный эндпоинт преднозначен для регистрации порльзователя через электронную почту.
После регистрации пользователь автоматически авторизуется.
**Запрос:**
Отправьте POST-запрос на этот эндпоинт с JSON-данными в теле запроса:
```json
{
  "email": 123456789,  # Telegram ID пользователя
  "password": Testing123!, # Проль должен быть валидным
  "first_name": "Иван",  # Имя пользователя можно не отправлять
  "last_name": "Иванов",  # Фамилия пользователя можно не отправлять
  "username": "ivan_ivanov"  # Username пользователя можно не отправлять
}
```
Curl
```
curl -i -X POST "http://127.0.0.1:8000/users/email_registration"      -H "Content-Type: application/json"      -d '{
   "email": "test@example.com",
   "password": "Password",
   "username": "testuser",
   "name": "Test",
   "surname": "User"
}'
```
**Ответ:**
```
При успешном выполнении запроса возвращаются данные пользователя и токен доступа вставляется в куки.
```
**Статусные коды:**
```
- **200 OK:** Авторизация прошла успешно, токен доступа установлен в куке.
- **400:** Неверный формат запроса.
- **401:** Эл. почта не действительна.
- **402:** Пароль не валидный.
- **403:** Эл. почта занята.
- **405:** Эл. почта занята но является заблокированным или удаленным аккаунтом.
- **406:** Код верификации неправильный.
"""

email_login = """
Данный эндпоинт предназначен для авторизации пользователя через электронную почту и пароль.
**Запрос:**
Отправьте POST-запрос на этот эндпоинт с JSON-данными в теле запроса:
```json
{
  "email": "test@example.com",  # Электронная почта пользователя
  "password": "Testing123!"  # Пароль пользователя
}
```
Curl
```
curl -i -X POST "http://127.0.0.1:8000/users/email/login"      -H "Content-Type: application/json"      -d '{
    "email": "test@example.com",
    "password": "Testing123!"
}'
```
**Ответ:**
```
При успешном выполнении запроса возвращаются данные пользователя и токен доступа вставляется в куки.
```
**Статусные коды:**
```
- **200 OK:** Авторизация прошла успешно, токен доступа установлен в куке.
- **404 Not Found:** Пользователь с такой электронной почтой не найден.
- **403:** Пользователь найден, но пароль неверный.
- **406:** Код верификации неправильный.
"""
