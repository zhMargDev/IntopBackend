get_all = """
Этот эндпоинт позволяет получить все объявления или отфильтровать их по указанным параметрам.

**Как можно запрос отправлять**:
- Для получения всех объявлений: `GET /advertisments/all`
- Для получения конкретного объявления по id: `GET /advertisments/all?id=2`
- Для фильтрации по другим параметрам: `GET /advertisments/all?service_id=1&min_price=50&max_price=200&payment_method=credit_card`

**Какие параметры можно указать**:
- `id`: (необязательный) ID объявления для фильтрации. Если указан, будет возвращено только объявление с этим ID.
- `service_id`: (необязательный) ID сервиса для фильтрации.
- `min_price`: (необязательный) Минимальная цена для фильтрации.
- `max_price`: (необязательный) Максимальная цена для фильтрации.
- `payment_method`: (необязательный) Метод оплаты для фильтрации.

**Пример ответа**:
```json
[
    {
        "id": 1,
        "name": "Объявление 1",
        "location": "Москва",
        "rating_count": 0,
        "views_count": 0,
        "description": "Описание объявления 1",
        "price": 100.0,
        "owner_id": 1,
        "is_active": true,
        "timer": 3600,
        "picture": "http://example.com/picture1.jpg",
        "service": {
            "id": 1,
            "title": "Сервис 1",
            "description": "Описание сервиса 1",
            "picture": "http://example.com/service_picture1.jpg"
        },
        "payment_method": {
            "id": 1,
            "name": "credit_card"
        }
    },
    ...
]

```
**Ответ:**
- `200 OK`: Успешный запрос, возвращает список объявлений или одно объявление.
- `400 Bad Request`: Минимальная цена больше максимальной цены.
- `404 Not` Found: Объявления не найдены или указанное объявление не найдено.
```
"""

add_new_advertisment = """
Этот эндпоинт позволяет добавить новое объявление.

**Как можно отправить запрос**:
- `POST /advertisments/add`

**Какие параметры можно указать**:
- `user_id`: (обязательный) ID пользователя, который добавляет объявление. Должен совпадать с ID пользователя в токене.
- `name`: (обязательный) Название объявления.
- `location`: (обязательный) Местоположение объявления.
- `description`: (обязательный) Описание объявления.
- `price`: (обязательный) Цена объявления.
- `owner_id`: (обязательный) ID владельца объявления.
- `timer`: (обязательный) Таймер объявления.
- `picture`: (обязательный) Изображение объявления в формате файла.

**Пример запроса**:
```bash
curl -X POST "http://localhost:8000/advertisments/add" \
-H "Authorization: Bearer your_jwt_token" \
-F "user_id=1" \
-F "name=Новое объявление" \
-F "location=Москва" \
-F "description=Описание объявления" \
-F "price=100.0" \
-F "owner_id=1" \
-F "timer=3600" \
-F "picture=@/path/to/your/picture.jpg"

```
Пример ответа:
`{
    "message": "Объявление успешно создано",
    "advertisement_id": 1
}`
```

```
**Ответ:**
- `200 OK`: Успешный запрос, объявление успешно создано.
- `403 Forbidden`: Токен доступа отсутствует или недействителен, или у пользователя недостаточно прав.
- `404 Not Found`: Пользователь не найден.
- `422:` Отправленные данные не совподают с ожиданиями сервера.
```
"""

update_advertisment = """
Этот эндпоинт позволяет обновить существующее объявление.

**Как можно отправить запрос**:
- `PUT /advertisments/update/{advertisement_id}`

**Какие параметры можно указать**:
- `advertisement_id`: (обязательный) ID объявления, которое нужно обновить.
- `user_id`: (обязательный) ID пользователя, который обновляет объявление. Должен совпадать с ID пользователя в токене.
- `name`: (необязательный) Новое название объявления.
- `location`: (необязательный) Новое местоположение объявления.
- `description`: (необязательный) Новое описание объявления.
- `price`: (необязательный) Новая цена объявления.
- `timer`: (необязательный) Новый таймер объявления.
- `picture`: (необязательный) Новое изображение объявления в формате файла.

**Пример запроса**:
```bash
curl -X PUT "http://localhost:8000/advertisments/update/1" \
-H "Authorization: Bearer your_jwt_token" \
-F "user_id=1" \
-F "name=Обновленное объявление" \
-F "location=Санкт-Петербург" \
-F "description=Обновленное описание объявления" \
-F "price=150.0" \
-F "timer=7200" \
-F "picture=@/path/to/your/new_picture.jpg"
```
Пример ответа:
json
`{
    "message": "Объявление успешно обновлено",
    "advertisement_id": 1
}`
```
```
**Ответ:**
- `200 OK`: Успешный запрос, объявление успешно обновлено.
- `403 Forbidden`: Токен доступа отсутствует или недействителен, или у пользователя недостаточно прав.
- `404 Not Found`: Объявление не найдено.
```
"""

delete_advertisment = """
Этот эндпоинт позволяет удалить существующее объявление и связанное с ним изображение.

**Как можно отправить запрос**:
- `DELETE /advertisments/delete/{advertisement_id}`

**Какие параметры можно указать**:
- `advertisement_id`: (обязательный) ID объявления, которое нужно удалить.
- `user_id`: (обязательный) ID пользователя, который удаляет объявление. Должен совпадать с ID пользователя в токене.

**Пример запроса**:
```bash
curl -X DELETE "http://localhost:8000/advertisments/delete/1" \
-H "Authorization: Bearer your_jwt_token" \
-F "user_id=1"

```
Пример ответа:
json
`{
    "message": "Объявление успешно удалено",
    "advertisement_id": 1
}`
```
```
**Ответ:**
- `200 OK`: Успешный запрос, объявление успешно удалено.
- `403 Forbidden`: Токен доступа отсутствует или недействителен, или у пользователя недостаточно прав.
- `404 Not` Found: Объявление не найдено.
```
"""